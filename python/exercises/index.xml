<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Exercises on Dr. CS codes</title><link>https://DrCS.codes/python/exercises/</link><description>Recent content in Exercises on Dr. CS codes</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://DrCS.codes/python/exercises/index.xml" rel="self" type="application/rss+xml"/><item><title>BMI</title><link>https://DrCS.codes/python/exercises/bmi/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://DrCS.codes/python/exercises/bmi/</guid><description>bmi Module Introduction In this assignment you&amp;rsquo;ll practice
writing functions and modules, manipulating strings, converting values to different data types, doing arithmetic calculations, and testing modules with doctest. Problem Description You want to live a healthy life and use your computer to help you analyze your fitness and health.
Solution Description Create a module that provides convenience functions for converting imperial measures to metric equivalents, a function to calculate BMI, and two functions that tell you whether you are overweight or underweight according to government BMI standards.</description></item><item><title>Data Manipulation</title><link>https://DrCS.codes/python/exercises/data-manipulation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://DrCS.codes/python/exercises/data-manipulation/</guid><description>Data Manipulation Introduction Drills are very short exercises designed to exercise the most basic building blocks of modules and programs.
Problem Description Data manipulation applications almost always include tranformation of data from one or more forms into other forms. In this drill you will practice transforming data stored in data structures into equivalent data stored in different data structures. Such transformations are often done to make the data easier to process for a particular application.</description></item><item><title>Dates</title><link>https://DrCS.codes/python/exercises/dates/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://DrCS.codes/python/exercises/dates/</guid><description>Dates Introduction In this assignment you will practice:
writing functions, documenting functions, doing basic operations with values and variables, and dealing with date-related data. Problem Description You want to get information about dates and days that require some calculation
Solution Description Write a module called dates (which you should save in a file called dates.py) with the following functions. For each function, be sure to the function design recipe in Practical Programming: An Introduction to Computer Science using Python 3.</description></item><item><title>Email Utilities</title><link>https://DrCS.codes/python/exercises/email-utils/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://DrCS.codes/python/exercises/email-utils/</guid><description>Email Utilites In this exercise you will practice:
string manipulation, string methods, simple boolean expressions, and writing functions. Introduction Emails are of the form @. For example, bob@aol.com means there is a bob user account on the aol.com server. Email address are case insensitive, so Liger@SweetAnimals.com is the same as liger@sweetanimals.com. (This is a bit of a simplification, but fits our purpose here.)
Problem Description You need to extract user names and server names from email addresses, and compare two emails to determine if they are the same.</description></item><item><title>Homework 0</title><link>https://DrCS.codes/python/exercises/hw0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://DrCS.codes/python/exercises/hw0/</guid><description>Homework 0 Introduction This assignment gets you started with the basic tools you will need to complete all of your homework projects. This project will
ensure that you have correctly installed Python 3 give you practice using a text editor to write Python programs, and give you practice running Python programs and using command line features. Problem Description You are a student who needs to install Python, configure it for command line use, and learn how to use a programmer&amp;rsquo;s text editor to create and edit Python source code.</description></item><item><title>Language Dictionary</title><link>https://DrCS.codes/python/exercises/language-dictionary/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://DrCS.codes/python/exercises/language-dictionary/</guid><description>Language Dictionary Introduction In this assignment you&amp;rsquo;ll practice
writing command-line tools, and working with dictionaries. Problem Description You want to quickly look up word translations in foreign languges.
Solution Description Write a script that takes two command line arguments, a word and a target language, and prints the word from the target language that corresponds to the word provided. Provide at least the following words, feel free to add your own:</description></item><item><title>Matrix Operations</title><link>https://DrCS.codes/python/exercises/matrixops/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://DrCS.codes/python/exercises/matrixops/</guid><description>Matrix Operations Introduction In this assignment you will practice:
manipulating data structures, and translating a specification (e.g., a mathematical definition) into code. Problem Description You are writing an application that needs to perform basic operations on matrices.
Solution Description Write a module called matrixops (which you should save in a file called matrixops.py) with the following functions. For each function, be sure to the function design recipe in Practical Programming: An Introduction to Computer Science using Python 3.</description></item><item><title>String Fun</title><link>https://DrCS.codes/python/exercises/stringfun/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://DrCS.codes/python/exercises/stringfun/</guid><description>String Fun Introduction In this assignment you will practice:
writing functions, documenting functions, and manipulating strings. Problem Description You want to get information about dates and days that require some calculation
Solution Description doctest Use doctest to test your module using Python REPL examples similar to the ones provided for each function above. You may wish to include these test cases in your function docstrings, as well as others that you come up with on your own to test edge cases.</description></item><item><title>Text Utilities</title><link>https://DrCS.codes/python/exercises/textutil/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://DrCS.codes/python/exercises/textutil/</guid><description>Text Utilities Introduction In this assignment you&amp;rsquo;ll practice
writing functions and modules, doing arithmetic calculations, simple text processing, manipulating data structures and testing modules with doctest. Problem Description You need to do some text processing and decide to write a few utility functions to get started.
Solution Description Write a module named textutil with the functions specified below.
doctest The specification for each function is given as a docstring &amp;ndash; which you should include in your code &amp;ndash; and the types of arguments and return values are given using type hints documented in PEP 484 &amp;ndash; Type Hints.</description></item></channel></rss>