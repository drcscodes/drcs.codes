<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Projects on Dr. CS codes</title><link>https://DrCS.codes/python/projects/</link><description>Recent content in Projects on Dr. CS codes</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://DrCS.codes/python/projects/index.xml" rel="self" type="application/rss+xml"/><item><title>Fit</title><link>https://DrCS.codes/python/projects/fit/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://DrCS.codes/python/projects/fit/</guid><description>fit Module Introduction In this assignment you&amp;rsquo;ll practice
writing functions and modules, doing arithmetic calculations, simple text processing, and testing modules with doctest. Problem Description You run a phyical fitness contest modeled after Navy Special Warfare&amp;rsquo;s physical screening test. You get data from contestants that includes times on a run, a swim, push-ups, pull-ups, and sit-ups and you must convert these times and numbers to a single score that can be used to rank fitness contest entries.</description></item><item><title>Generate Sentence</title><link>https://DrCS.codes/python/projects/generate-sentence/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://DrCS.codes/python/projects/generate-sentence/</guid><description>generate_sentence Module Introduction In this assignment you&amp;rsquo;ll practice
writing functions and modules, using lists and dictionaries, selective logic (if statements), simple text processing, and testing modules with doctest. Problem Description You&amp;rsquo;re interested in natural language processing and, having learned about context free grammars for natural languages, you want to experiment with sentence generation.
Solution Description Write a module named generate_sentence with functions that can be used to generate noun phrases, verb phrases and sentences in subject-verb-object form.</description></item><item><title>Markov Chains</title><link>https://DrCS.codes/python/projects/markov-chains/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://DrCS.codes/python/projects/markov-chains/</guid><description>Markov Chains Introduction In this assignment you&amp;rsquo;ll practice
writing classes and modules, simple text processing, and basic numerical computing issues in Python. Problem Description You&amp;rsquo;re interested in natural language processing, and in the problem of identifying the source of a text.
Solution Description Write a module named source.py with a class named SourceModel whose constructor takes a name for a source, and a courpus object of type TextIOWrapper (such as a file object &amp;ndash; see io module) and builds a first-order Markov model of the transitions between letters in the source.</description></item><item><title>Word Histogram</title><link>https://DrCS.codes/python/projects/word-hist/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://DrCS.codes/python/projects/word-hist/</guid><description>Word Histogram Introduction In this homework you will practice
data structures, control structures, functional programming, and using modules that you learn on your own from documentation. Problem Descrtiption You&amp;rsquo;re a curious linguist with computer hacking skills and you want to see if Zipf&amp;rsquo;s Law holds for texts contained in files lying around on your disk.
Solution Description Write a Python module in word_hist.py that includes the following functions. You should copy these function declarations and docstrings verbatim to ensure that we can successfully autograde your submission.</description></item></channel></rss>