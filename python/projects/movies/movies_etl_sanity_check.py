from typing import *
import csv, json, sys

correct_ids_by_year = {
    '1990': ['861', '196', '1498', '1551', '169', '9556', '5549', '2612', '34086', '19384', '11309', '23535', '3072', '27274', '192074', '530', '18317', '30647', '545334', '218650'],
    '1991': ['280', '174', '1497', '10249', '8010', '24331', '10379', '11504', '34376', '892', '27549', '47620', '76516', '77664', '44192', '16191', '87733', '100414', '10341', '35648'],
    '1992': ['8077', '10326', '11158', '13225', '10163', '11597', '2687', '12088', '24230', '13006', '201685', '37420', '3042', '54785', '39465', '47628', '1877', '9349', '17991', '45779'],
    '1993': ['329', '9739', '15613', '6593', '41759', '5550', '18890', '41651', '24126', '39283', '26672', '4722', '28260', '35610', '18242', '14572', '288842', '124049', '85118', '17803'],
    '1994': ['2164', '193', '3036', '8831', '8850', '8011', '10447', '15139', '25557', '14237', '2436', '50767', '35614', '21947', '414753', '251881', '69206', '44117', '81936', '81859'],
    '1995': ['9804', '6950', '63', '9482', '9348', '9070', '9271', '9886', '281', '9102', '9067', '9323', '902', '24732', '10840', '222849', '27010', '39108', '12561', '92698'],
    '1996': ['9294', '199', '9327', '75', '12123', '7095', '9306', '10061', '15691', '11511', '8766', '10547', '11867', '11525', '10690', '73183', '474532', '435849', '2460', '3065'],
    '1997': ['330', '607', '18', '754', '415', '9574', '686', '8078', '10357', '563', '10003', '10336', '816', '9823', '8413', '4961', '6499', '9922', '782', '8854'],
    '1998': ['95', '929', '846', '2157', '200', '11551', '9320', '9276', '10153', '2666', '10216', '9424', '9425', '9457', '9827', '24746', '54007', '131947', '448674', '306974'],
    '1999': ['1893', '603', '817', '8487', '12599', '926', '8914', '9825', '9849', '22345', '9824', '10386', '2900', '1090', '7341', '10208', '10366', '10643', '82374', '1946'],
    '2000': ['36657', '9741', '9383', '12107', '8843', '8452', '8859', '10559', '2067', '889', '2787', '7450', '8870', '5491', '16110', '20455', '12211', '11849', '10384', '22230'],
    '2001': ['331', '869', '644', '1903', '10865', '9397', '9606', '2114', '12589', '10796', '167', '19405', '12600', '11470', '10016', '10881', '23685', '26446', '515208', '509944'],
    '2002': ['1894', '608', '2675', '180', '818', '9334', '2135', '9016', '10771', '1576', '170', '201', '15028', '2103', '9296', '13768', '11692', '7299', '379561', '140585'],
    '2003': ['604', '296', '605', '36658', '1927', '12279', '8698', '9480', '10330', '9620', '9341', '9562', '6171', '310333', '245716', '121133', '11049', '59711', '24362', '24358'],
    '2004': ['435', '2048', '395', '1577', '36648', '10145', '2789', '9890', '1487', '1954', '38', '5137', '11058', '11052', '14623', '844', '11662', '12140', '10045', '11633'],
    '2005': ['1895', '74', '9738', '9928', '1635', '7453', '14199', '6795', '9947', '8814', '8202', '11683', '16320', '10077', '11559', '14337', '239908', '222060', '399910', '143830'],
    '2006': ['36668', '1452', '7551', '834', '1255', '9693', '37933', '4474', '9954', '9920', '1381', '9035', '14113', '5172', '3509', '14609', '14069', '9389', '4977', '7512'],
    '2007': ['1858', '6479', '7737', '1738', '10253', '1562', '5876', '440', '1272', '1534', '2267', '9785', '4858', '16873', '13025', '14139', '15137', '22491', '15888', '392118'],
    '2008': ['1726', '10200', '8247', '7191', '1724', '8645', '11253', '88751', '7459', '10483', '9381', '8836', '12180', '11802', '11260', '13688', '13956', '13812', '8285', '36683'],
    '2009': ['19995', '8373', '14161', '13475', '15512', '2080', '534', '14869', '17654', '13183', '13811', '19959', '13836', '16866', '16523', '12437', '18162', '20856', '19901', '12244'],
    '2010': ['27205', '10138', '20526', '38055', '35791', '20504', '34851', '42684', '23048', '31867', '42188', '30675', '43933', '37851', '42194', '46837', '467314', '52015', '453263', '51859'],
    '2011': ['38356', '61791', '1771', '49538', '39254', '37686', '44912', '44943', '49849', '49530', '51876', '45612', '46529', '39538', '38050', '39513', '38321', '71469', '38117', '60935'],
    '2012': ['24428', '70160', '41154', '70981', '72545', '44833', '49529', '71679', '64635', '76726', '83542', '80035', '75629', '59967', '60747', '49049', '81796', '88005', '10679', '58244'],
    '2013': ['68721', '101299', '49047', '49521', '72190', '54138', '76170', '68726', '72559', '75612', '68724', '82700', '80274', '87421', '158015', '122906', '110415', '68179', '72710', '152601'],
    '2014': ['91314', '118340', '131631', '127585', '100402', '119450', '157336', '124905', '98566', '137113', '198663', '157350', '97020', '240832', '157353', '227156', '238603', '208763', '218043', '270654'],
    '2015': ['140607', '135397', '99861', '131634', '286217', '102899', '87101', '76341', '228161', '294254', '262500', '257344', '158852', '76757', '166424', '274854', '198184', '264660', '228066', '227719'],
    '2016': ['271110', '330459', '297761', '284052', '246655', '47933', '188927', '173897', '274870', '308531', '121856', '329865', '262504', '205584', '299687', '333371', '315011', '262841', '416149', '302156'],
    '2017': ['181808', '315635', '283995', '284053', '141052', '263115', '335988', '281338', '335984', '126889', '339964', '274855', '315837', '305470', '353491', '395992', '301337', '400710', '340837', '339988'],
    '2018': ['284054', '351286', '363088', '333339', '335983', '427641', '348350', '447332', '345940', '268896', '336843', '407451', '300668', '442249', '445651', '438799', '406761', '500664', '425505', '465136']
}


def check_header(data: List[Dict[str, str]], points: int = 5) -> Tuple[int, str]:
    correct_columns = ["tmdb_id","imdb_id","title","release_date","belongs_to_collection","runtime","budget","revenue"]
    missing_columns = set(correct_columns) - data[0].keys()
    if len(missing_columns) > 0:
        print("Missing columns in header:", missing_columns)
    lost_points = int((len(missing_columns) / len(correct_columns)) * points)
    return lost_points, "contains correct header"

def check_ids_by_year(data: List[Dict[str, str]], points: int = 5) -> Tuple[int, str]:
    ids_by_year = {str(year): [] for year in range(1990, 2019)}
    for row in data:
        ids_by_year[row["release_date"].split("-")[0]].append(row["tmdb_id"])
    num_missing_ids = 0
    for year in range(1990, 2019):
        missing_ids_year = \
            set(correct_ids_by_year[str(year)]) - set(ids_by_year[str(year)])
        if len(missing_ids_year) > 0:
            print(len(missing_ids_year), "missing ids for", year, ":", missing_ids_year)
        num_missing_ids += max(0, (len(missing_ids_year) - 10))
    lost_points = int((num_missing_ids / 290) * points)
    return lost_points, "contains at least 10 of the top 20 grossing sci-fi movies for each year in [1990,2018]"

def main(args: List[str]) -> None:
    try:
        data = [row for row in csv.DictReader(open("movies.csv"))]
    except FileNotFoundError as e:
        print(f"No movies.csv file.")
        sys.exit()
    items = [check_header(data, 5), check_ids_by_year(data, 5)]
    print("Probable lost points:")
    for points, report in items:
        print(f"-{points:>2}: {report}")

if __name__=="__main__":
    main(sys.argv)
