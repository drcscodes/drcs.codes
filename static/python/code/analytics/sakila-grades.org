#+STARTUP: inlineimages

* Creating Sakila Grades Example

First, preliminary imports:

#+BEGIN_SRC ipython :session :results raw drawer
  import numpy as np
  import pandas as pd
  import pymysql
#+END_SRC

#+RESULTS:
:RESULTS:
# Out[35]:
:END:

Now get the names from the database.

#+BEGIN_SRC ipython :session :results raw drawer
  sakila = pymysql.connect(host="localhost",
                           user="root",
                           password="",
                           db="sakila",
                           charset="utf8mb4",
                           cursorclass=pymysql.cursors.DictCursor)

  grades = pd.read_sql("select first_name, last_name from actor", con = sakila)
  grades.head()
#+END_SRC

#+RESULTS:
:RESULTS:
# Out[93]:
#+BEGIN_EXAMPLE
  first_name     last_name
  0   PENELOPE       GUINESS
  1       NICK      WAHLBERG
  2         ED         CHASE
  3   JENNIFER         DAVIS
  4     JOHNNY  LOLLOBRIGIDA
#+END_EXAMPLE
:END:


Update the index with login ids taht look like GT login IDs, generated from names, e.g.. Penelope Guinness's id is pguiness0.

#+BEGIN_SRC ipython :session :results raw drawer
ids = [grades.loc[i]['first_name'].lower()[0] + grades.loc[i]['last_name'].lower() + str(i)
       for i in grades.index]
grades.index = ids
grades.index.name = "loginId"
grades.head()
#+END_SRC

#+RESULTS:
:RESULTS:
# Out[94]:
#+BEGIN_EXAMPLE
  first_name     last_name
  loginId
  pguiness0        PENELOPE       GUINESS
  nwahlberg1           NICK      WAHLBERG
  echase2                ED         CHASE
  jdavis3          JENNIFER         DAVIS
  jlollobrigida4     JOHNNY  LOLLOBRIGIDA
#+END_EXAMPLE
:END:

Convert names to capitalized form.

#+BEGIN_SRC ipython :session :results raw drawer
grades['first_name'] = grades.apply(lambda row: row['first_name'].capitalize(), axis=1)
grades['last_name'] = grades.apply(lambda row: row['last_name'].capitalize(), axis=1)
grades.head()
#+END_SRC

#+RESULTS:
:RESULTS:
# Out[95]:
#+BEGIN_EXAMPLE
  first_name     last_name
  loginId
  pguiness0        Penelope       Guiness
  nwahlberg1           Nick      Wahlberg
  echase2                Ed         Chase
  jdavis3          Jennifer         Davis
  jlollobrigida4     Johnny  Lollobrigida
#+END_EXAMPLE
:END:

Make a single "name" column with last_name, first_name format, get rid of old last_name and first_name columns.

#+BEGIN_SRC ipython :session :results raw drawer
grades['name'] = grades.apply(lambda row: f"{row['last_name']}, {row['first_name']}", axis=1)
del(grades['first_name'])
del(grades['last_name'])
grades.head()
#+END_SRC

#+RESULTS:
:RESULTS:
# Out[96]:
#+BEGIN_EXAMPLE
  name
  loginId
  pguiness0          Guiness, Penelope
  nwahlberg1            Wahlberg, Nick
  echase2                    Chase, Ed
  jdavis3              Davis, Jennifer
  jlollobrigida4  Lollobrigida, Johnny
#+END_EXAMPLE
:END:

Add some fake assignments and grades.

#+BEGIN_SRC ipython :session :results raw drawer
for hw in ["hw0", "hw1", "hw3"]:
    grades[hw] = np.random.normal(90, 5, len(grades))
for quiz in ["quiz1", "quiz2", "quiz3", "quiz4", "quiz5", "quiz6"]:
    grades[quiz] = np.random.normal(70, 10, len(grades))
for exam in ["exam1", "exam2", "exam3", "final_exam"]:
    grades[exam] = np.random.normal(78, 10, len(grades))
# Convert grades to integers
for col in grades.columns[1:]:
    grades[col] = grades[col].astype('int', copy=False)
grades.to_csv("sakila-grades.csv")
grades.head()
#+END_SRC

#+RESULTS:
:RESULTS:
# Out[97]:
#+BEGIN_EXAMPLE
  name  hw0  hw1  hw3  quiz1  quiz2  quiz3  \
  loginId
  pguiness0          Guiness, Penelope   85   99   95     79     69     61
  nwahlberg1            Wahlberg, Nick   95   93   95     73     58     66
  echase2                    Chase, Ed   87   94   90     65     63     62
  jdavis3              Davis, Jennifer   87   87   94     76     66     72
  jlollobrigida4  Lollobrigida, Johnny   95   89   92     68     66     72

  quiz4  quiz5  quiz6  exam1  exam2  exam3  final_exam
  loginId
  pguiness0          77     51     87     92     91     73          73
  nwahlberg1         66     66     75     89     91     87          78
  echase2            67     60     62     73     79     59          60
  jdavis3            54     73     81     82     78     77          75
  jlollobrigida4     68     63     44     70     80     54          50
#+END_EXAMPLE
:END:

#+BEGIN_SRC ipython :session :results raw drawer

#+END_SRC

#+BEGIN_SRC ipython :session :results raw drawer

#+END_SRC

#+BEGIN_SRC ipython :session :results raw drawer

#+END_SRC

#+BEGIN_SRC ipython :session :results raw drawer

#+END_SRC

#+BEGIN_SRC ipython :session :results raw drawer

#+END_SRC

#+BEGIN_SRC ipython :session :results raw drawer

#+END_SRC
